conf={refresh_interval:5e3},function(){wtf={};var t={};let e,s,i,n=0,o={},r={};var a={gethostport:function(t){console.debug("Get current hostname + port"),null!==(e=document.getElementById("hostname")&&document.getElementById("hostname").value)&&""!==e||(e=window.location.hostname),null!==(s=document.getElementById("port")&&document.getElementById("port").value)&&""!==s||(s=window.location.host===window.location.hostname?80:window.location.host.substring(window.location.hostname.length+1)),""!==s&&80!==s&&(e+=":"+s),t(500)},getoptionsfromurl:function(t){if(window.location.search.split("?").length>1){let t=window.location.search.split("?")[1].split("&");for(var e=0;e<t.length;e++){let s=t[e].split("=");r[s[0]]=s[1]}}t()},loadcore:function(t){void 0!=window.classes&&void 0!==window.classes.Core?(wtf=new window.classes.Core,l(window,wtf),t()):t(null,2e3)},loadplugins:function(t){if(console.debug("Load base & framework plugin"),void 0==window.plugins||void 0===window.plugins.Framework||void 0===window.plugins.Base)return void t(null,2e3);let e=new window.plugins.Framework;l(window,e),t()},loadtests:function(t){console.debug("Loading tests manifest"),get("js/tests.json",e=>{if(void 0!==e.error&&(console.error("Error loading tests.json from server, no tests are available"),t()),200===e.status&&void 0!==e.body){let s=JSON.parse(e.body);console.log(`Loaded ${Object.keys(s).length} tests`);let i=Object.keys(s);for(let t=0;t<i.length;t++){let e=i[t],n=s[e];wtf.tests[e]=new Test(n),console.debug("Successfully loaded "+e)}t()}})},loadviews:function(t){if(console.log("Loading views"),void 0===window.views||void 0===window.views.MenuView||void 0===window.views.DeviceView)return void t(null,1e3);let e=Object.keys(window.views);for(var s=0;s<e.length;s++){let t=e[s],i=window.views[t];o[t]=new i}t()},loadrouter:function(e){t={device:o.DeviceView,tests:o.TestsView,test:o.TestView},void 0!==r.dummy&&(console.debug("Test mode enabled."),wtf.dummyMode=!0),void 0!==r.disabled?(console.debug("Showing disabled tests"),wtf.showDisabled="true"===r.disabled):wtf.showDisabled=!0,void 0!==r.operator&&(console.debug("Operator: ",r.operator),wtf.operator=r.operator),void 0===r.host||""===r.host||null!==host?(d(),e()):wtf.activateDevice(r.host,()=>{e(null,100)})}};function d(){let e=window.location.hash.replace("#","");void 0!==e&&void 0!==t[e]?navigate(e):navigate("device")}function l(t,e){for(var s in e)t[s]=e[s]}navigate=function(e,s){window.onhashchange=null,void 0!==i&&t[i].clear(),t[e].render(s),window.location.hash=e,i=e,setTimeout(function(){window.onhashchange=d}.bind(this),200)},NotApplicable=function(t){},setOption=function(t){let e=Object.keys(t);r[e]=t[e];let s="",i=Object.keys(r);i.length>0&&(s+="?");for(var n=0;n<i.length;n++)void 0!==r[i[n]]&&("?"!==s&&(s+="&"),s+=`${i[n]}=${r[i[n]]}`);window.location.search=s},function t(){var e=Object.keys(a);n>e.length-1||a[e[n]]((e,s)=>{null===e&&void 0!==s?(console.debug(`Retrying bootstep ${n} in ${e} ms`),setTimeout(t,s)):void 0!==e?(console.debug(`Bootstep ${n} completed, starting next in ${e} ms`),n++,setTimeout(t,e)):(console.debug(`Bootstep ${n} completed, starting next`),n++,t())})}()}();class BaseView{constructor(){this.mainDiv=document.getElementById("main")}render(){}clear(){}}class Core{constructor(){this.activeTest="",this.deviceid=null,this.devicename=null,this.dummyMode=!1,this.results={},this.tests=[],this.version=null,this.worker=null,this.testProgressListeners=[],this.activateDevice=this.activateDevice.bind(this),this.deleteDevice=this.deleteDevice.bind(this),this.getScreenshotCanvas=this.getScreenshotCanvas.bind(this),this.run=this.run.bind(this)}activateDevice(t,e){if(1==this.dummyMode)return this.host="127.0.0.1",this.devicename="rpi2",this.deviceid="device0",this.version="1.0",void e({devicename:this.devicename,deviceid:this.deviceid,version:this.version});window.host=t,getPlugin("DeviceInfo",t=>{if(void 0===t.error){var s=JSON.parse(t.body);void 0!==s.systeminfo&&(this.devicename=s.systeminfo.devicename,this.deviceid=s.systeminfo.deviceid,this.version=s.systeminfo.version),console.log("Got device info response, using deviceid: "+this.deviceid),console.log("Found firmware version: "+this.version),console.log("Using name:"+this.devicename),e({devicename:this.devicename,deviceid:this.deviceid,version:this.version})}else e({error:"Error activating device, could not load DeviceInfo"})})}deleteDevice(){delete this._host,delete this.version,delete this.serialnumber}run(t){this.activeTest=t,this.worker=new Worker("js/task/task.js"),this.needImage=new NeedImage(this.worker),this.init=new Init(this.worker),this.worker.onmessage=(t=>{console.log("APP message: ",t.data);var e=t.data;switch(e.messageContext){case"Init":e.state===this.init.states.loaded&&(!0===window.DEBUG&&this.init.setDebug(),this.init.initialize()),e.state===this.init.states.initReady&&this.init.setLoadTest(this.activeTest,host);break;case"NeedImage":this.loadImageData(e.url,t=>{this.needImage.setImageData(t.imageData.data)});break;case"TestMessage":if(void 0===e.name)return;let t=wtf.tests[e.name];this._syncDataObjects(t,e),!0===e.completed&&(delete this.canvas,delete this.ctx,delete this.image,delete this.needImage.imageData);break;case"StepMessage":if(void 0===e.name||void 0===e.testName)return;let s=wtf.tests[e.testName],i=s.steps[e.name];s.currentStep=e.name,this._syncDataObjects(i,e)}for(var s=0;s<this.testProgressListeners.length;s++)testProgressListeners[s](e)})}_syncDataObjects(t,e){for(let s=0;s<t.statesToBeSynced.length;s++){let i=t.statesToBeSynced[s],n=e[i];void 0!==n&&(t[i]=n)}}registerForTestProgress(t){this.testProgressListeners.push(t)}deregisterForTestProgress(t){var e=this.testProgressListeners.indexOf(t);e>-1&&this.testProgressListeners.splice(e,1)}loadImageData(t,e){this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.image=new Image,this.image.src=t,this.image.crossOrigin="anonymous",this.image.onload=(()=>{this.canvas.width="300",this.canvas.height="150",this.ctx.drawImage(this.image,0,0,300,150),console.debug(`Image loaded: ${this.image.width} x ${this.image.height} pixels`),e({imageData:this.ctx.getImageData(0,0,this.image.width,this.image.height)})}),this.image.onerror=(()=>{e({error:"Could not load image"})})}getScreenshotCanvas(){return this.canvas}getDeviceDetails(){return{devicename:this.devicename,deviceid:this.deviceid,version:this.version}}getActiveTask(){return this.activeTask}getActiveDevces(){return this.devices}}window.classes=window.classes||{},window.classes.Core=Core;class Base{constructor(){this.host=null,this.dummy=this.dummy.bind(this),this.sleep=this.sleep.bind(this),this.get=this.get.bind(this),this.http=this.http.bind(this),this.httpResponseSimple=this.httpResponseSimple.bind(this),this.httpResponseBody=this.httpResponseBody.bind(this),this.jsonParse=this.jsonParse.bind(this),this.checkIfObject=this.checkIfObject.bind(this),this.startHttpServer=this.startHttpServer.bind(this),this.startFileServer=this.startFileServer.bind(this),this.matchIpRange=this.matchIpRange.bind(this)}dummy(t,e){e(t)}sleep(t,e){this.setTimeout(e,1e3*t)}get(t,e){this.http({url:t,method:"GET",body:null},e)}http(t,e){var s=t.url,i=t.method,n=t.body,o=new XMLHttpRequest;o.open(i,s,!0),e&&(o.onreadystatechange=function(){4==o.readyState&&(o.status>=200&&o.status<=299?e({headers:o.getAllResponseHeaders(),body:o.responseText,status:o.status,statusMessage:o.statusText}):o.status>=300?e({error:`HTTP Status ${o.status}${void 0!==XMLHttpRequest.statusMessage?`, with message: ${o.statusMessage}`:""}`}):0===o.status&&e({error:"Connection interrupted"}))},o.ontimeout=function(){e({error:"Connection timed out"})}),null!==n?o.send(n):o.send()}httpResponseSimple(t){if(t.error)throw new Error(t.error);if(void 0!==t.status&&parseInt(t.status)<400)return!0;throw new Error("Framework returned with a HTTP code > 400")}httpResponseBody(t){if(t.error)throw new Error(t.error);if(void 0!==t.status&&parseInt(t.status)<400&&void 0!==t.body)return!0;throw new Error("Framework returned with a HTTP code > 400 or no body (yet expected)")}jsonParse(t,e){try{e(JSON.parse(t))}catch(t){throw new Error("Error parsing json at jsonParse step")}}checkIfObject(t){if("object"==typeof t)return!0;throw new Error(`${t} is not an Object`)}startHttpServer(t,e){throw Error("This is no longer supported in the web version, please point your test to the webserver instead")}startFileServer(t){throw Error("This is no longer supported in the web version, please point your test to the webserver instead")}matchIpRange(t,e){throw Error("This is no longer supported in the web version, local server support is disabled. Please update your test")}}window.plugins=window.plugins||{},window.plugins.Base=Base;class Framework extends Base{constructor(){super(),this.up="0x0001",this.down="0x0002",this.right="0x0004",this.left="0x0003",this.esc="0x0009",this.exit="0x0009",this.back="0x0032",this.enter="0x002B",this.menu="0x8010",this.guide="0x800A",this.key=this.key.bind(this),this.keyPress=this.keyPress.bind(this),this.keyRelease=this.keyRelease.bind(this),this.setUrl=this.setUrl.bind(this),this.setYouTubeUrl=this.setYouTubeUrl.bind(this),this.getUrl=this.getUrl.bind(this),this.controllerActionCall=this.controllerActionCall.bind(this),this.startPlugin=this.startPlugin.bind(this),this.startAndResumePlugin=this.startAndResumePlugin.bind(this),this.stopPlugin=this.stopPlugin.bind(this),this.switchPlugin=this.switchPlugin.bind(this),this.startPlugins=this.startPlugins.bind(this),this.stopPlugins=this.stopPlugins.bind(this),this.getPlugin=this.getPlugin.bind(this),this.getPlugins=this.getPlugins.bind(this),this.getPluginState=this.getPluginState.bind(this),this.suspendPlugin=this.suspendPlugin.bind(this),this.resumePlugin=this.resumePlugin.bind(this),this.screenshot=this.screenshot.bind(this),this.getFPS=this.getFPS.bind(this),this.reboot=this.reboot.bind(this),this.getCpuLoad=this.getCpuLoad.bind(this),this.getMemoryUsage=this.getMemoryUsage.bind(this),this.getMemoryUsageForPlugin=this.getMemoryUsageForPlugin.bind(this),this.restartFramework=this.restartFramework.bind(this),this.startFramework=this.startFramework.bind(this),this.stopFramework=this.stopFramework.bind(this),this.killFramework=this.killFramework.bind(this),this.killallFramework=this.killallFramework.bind(this),this.requestProvisioning=this.requestProvisioning.bind(this),this.checkResumedOrActivated=this.checkResumedOrActivated.bind(this),this.checkSuspendedOrDeactivated=this.checkSuspendedOrDeactivated.bind(this)}key(t,e){this.keyPress(t,()=>{this.keyRelease(t,e)})}keyPress(t,e){var s=JSON.stringify({code:t}),i={url:`http://${host}:80/Service/RemoteControl/Web/Press`,body:s,method:"PUT"};this.http(i,e)}keyRelease(t,e){var s=JSON.stringify({code:t}),i={url:`http://${host}:80/Service/RemoteControl/Web/Release`,body:s,method:"PUT"};this.http(i,e)}setUrl(t,e){var s=JSON.stringify({url:t}),i={url:`http://${host}:80/Service/WebKitBrowser/URL`,method:"POST",body:s,headers:{"Content-Type":"application/json","Content-Length":s.length}};this.http(i,e)}setYouTubeUrl(t,e){var s=JSON.stringify({url:t}),i={url:`http://${host}:80/Service/YouTube/URL`,method:"POST",body:s,headers:{"Content-Type":"application/json","Content-Length":s.length}};this.http(i,e)}getUrl(t,e){this.getPlugin("WebKitBrowser",t=>{var s=JSON.parse(t.body);e(s.url)})}controllerActionCall(t,e){var s={url:`http://${host}:80/Service/Controller/${t.action}/${t.plugin}`,method:"PUT"};this.http(s,e)}startPlugin(t,e){var s={action:"Activate",plugin:t};this.controllerActionCall(s,e)}startAndResumePlugin(t,e){this.startPlugin(t,()=>{setTimeout(resumePlugin,300,t,e)})}stopPlugin(t,e){var s={action:"Deactivate",plugin:t};this.controllerActionCall(s,e)}switchPlugin(t,e){var s={action:"Switch",plugin:t};this.controllerActionCall(s,e)}startPlugins(t,e){for(var s=0;s<t.length;s++)s==t.length-1?setTimeout(this.startPlugin.bind(this),1e3*s,t[s],e):setTimeout(this.startPlugin.bind(this),1e3*s,t[s])}stopPlugins(t,e){for(var s=0;s<t.length;s++)s==t.length-1?setTimeout(this.stopPlugin.bind(this),1e3*s,t[s],e):setTimeout(this.stopPlugin.bind(this),1e3*s,t[s])}getPlugin(t,e){var s={url:`http://${host}:80/Service/${t}`,method:"GET"};this.http(s,e)}getPlugins(t,e){var s={url:`http://${host}:80/Service/Controller/Plugins`,method:"GET"};this.http(s,e)}getPluginState(t,e){this.getPlugin("Controller",s=>{for(var i=JSON.parse(s.body),n=0;i.plugins.length;n++){var o=i.plugins[n];if(o.callsign===t){e(o.state);break}if(n===i.plugins.length-1)throw new Error("Plugin not found in Frameworks response")}})}suspendPlugin(t,e){var s={url:`http://${host}:80/Service/${t}/Suspend`,method:"POST"};this.http(s,e)}resumePlugin(t,e){var s={url:`http://${host}:80/Service/${t}/Resume`,method:"POST"};this.http(s,e)}reboot(t,e){var s={url:`http://${host}:80/Service/Controller/Harakiri`,method:"PUT"};this.http(s,e)}screenshot(t,e){var s=`http://${host}:80/Service/Snapshot/Capture?`+moment().valueOf();fetchImageData(s,t=>{e(t)})}getFPS(t,e){this.getPlugin("WebKitBrowser",t=>{var s=JSON.parse(t.body),i=parseInt(s.fps);e(i)})}getCpuLoad(t,e){this.getPlugin("DeviceInfo",t=>{var s=JSON.parse(t.body);if(void 0!==s.SystemInfo&&void 0===s.systeminfo)e(parseFloat(s.SystemInfo.CpuLoad));else{if(void 0!==s.SystemInfo||void 0===s.systeminfo)throw Error("Cannot find systemInfo Cpu load on DeviceInfo plugin response");e(parseFloat(s.systeminfo.cpuload))}})}getMemoryUsage(t,e){getPlugin("DeviceInfo",t=>{var s,i,n=JSON.parse(t.body);if(void 0!==n.SystemInfo&&void 0===n.systeminfo)s=parseInt(n.SystemInfo.FreeRam),i=parseInt(n.SystemInfo.TotalRam);else{if(void 0!==n.SystemInfo||void 0===n.systeminfo)throw Error("Cannot find systemInfo on DeviceInfo plugin response");s=parseInt(n.systeminfo.freeram),i=parseInt(n.systeminfo.totalram)}e(Math.round(s/i*100))})}getMemoryUsageForPlugin(t,e){this.getPlugin("Monitor",s=>{for(var i=JSON.parse(s.body),n=0;n<i.length;n++){var o=i[n];if(console.log("Checking "+o.name+" === "+t),o.name===t)return void e(o)}throw Error(`Cannot find ${t} in data returned by Monitor`)})}startFramework(t){t({})}stopFramework(t,e){e({})}killFramework(t,e){e({})}killallFramework(t,e){e({})}restartFramework(t,e){e({})}requestProvisioning(t,e){var s={url:`http://${host}:80/Service/Provisioning`,method:"PUT"};this.http(s,e)}checkResumedOrActivated(t){if("resumed"===t||"activated"===t)return!0;throw Error(`Expected state to be resumed or activated, while state was ${t}`)}checkSuspendedOrDeactivated(t){if("suspended"===t||"deactivated"===t)return!0;throw Error(`Expected state to be suspended or deactivated, while state was ${t}`)}}window.plugins=window.plugins||{},window.plugins.Framework=Framework;class AttachToLogs{constructor(t){this.cb=t,this.ws=void 0}connect(t){this.ws=new WebSocket(`ws://${host}:9998/devtools/page/1`),this.ws.addEventListener("open",()=>{this.ws.send('{"id":1,"method":"Inspector.enable"}'),this.ws.send('{"id":22,"method":"Console.enable"}'),this.ws.send('{"id":23,"method":"Inspector.initialized"}'),t()}),this.ws.addEventListener("message",t=>{var e=JSON.parse(t);"Console.messageAdded"===e.method&&this.cb(null,e.params.message.text)}),this.ws.addEventListener("error",t=>{throw Error(t)}),this.ws.addEventListener("close",()=>{console.log("connection closed")})}disconnect(){console.log("Closing attachToLogs websocket connection"),this.ws&&this.ws.close()}}window.plugins=window.plugins||{},window.plugins.AttachToLogs=AttachToLogs;class DeviceView extends BaseView{constructor(){super(),this.statusMessageTimer,this.status,this.lastSetIP=window.localStorage.getItem("lastSetIP")||""}render(){this.mainDiv.innerHTML=`\n\t\t\t<div class="title grid__col grid__col--8-of-8">Please on-board a device</div>\n\n\t\t\t<div class="label grid__col grid__col--2-of-8">\n\t\t\t\t<label for="onboard_ip">Enter IP address</label>\n\t\t\t</div>\n\t\t\t<div class="text grid__col grid__col--6-of-8">\n\t\t\t\t<input type="text" id="onboard_ip" size="20" value="${this.lastSetIP}" />\n\t\t\t\t<button id="onboard_button" type="button">Check</button>\n\t\t\t</div>\n\n\t\t\t<div id="deviceInfo" class="messagebox hidden">\n\t\t\t\t<div class="title grid__col grid__col--8-of-8">Device Information</div>\n\n\t\t\t\t<div class="label grid__col grid__col--2-of-8">Name</div>\n\t\t\t\t<div id="name" class="text grid__col grid__col--6-of-8"></div>\n\n\t\t\t\t<div class="label grid__col grid__col--2-of-8">Device id</div>\n\t\t\t\t<div id="deviceid" class="text grid__col grid__col--6-of-8"></div>\n\n\t\t\t\t<div class="label grid__col grid__col--2-of-8">Version</div>\n\t\t\t\t<div id="version" class="text grid__col grid__col--6-of-8"></div>\n\n\t\t\t\t<div class="grid__col grid__col--4-of-8"></div>\n\t\t\t\t<div class="label grid__col grid__col--2-of-8" style="text-align:right">Is this correct?</div>\n\t\t\t\t<div class="text grid__col grid__col--2-of-8">\n\t\t\t\t\t<button id="continue_button" type="button">GO</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id="statusDiv" class="text grid__col grid__col--8-of-8"></div>\n\t\t`,document.getElementById("onboard_button").onclick=this.onBoard.bind(this),this.ipDiv=document.getElementById("onboard_ip"),this.statusDiv=document.getElementById("statusDiv"),this.deviceInfoDiv=document.getElementById("deviceInfo"),this.nameDiv=document.getElementById("name"),this.deviceIdDiv=document.getElementById("deviceid"),this.versionDiv=document.getElementById("version"),document.getElementById("continue_button").onclick=this.goToTests.bind(this);let t=wtf.getDeviceDetails();null!==t.devicename&&(this.deviceInfoDiv.classList.remove("hidden"),this.nameDiv.innerHTML=t.devicename,this.deviceIdDiv.innerHTML=t.deviceid,this.versionDiv.innerHTML=t.version)}onBoard(){var t=document.getElementById("onboard_ip").value;""!==t&&void 0!==t?wtf.activateDevice(t,e=>{void 0===e.error?(this.deviceInfoDiv.classList.remove("hidden"),this.nameDiv.innerHTML=e.devicename,this.deviceIdDiv.innerHTML=e.deviceid,this.versionDiv.innerHTML=e.version,setOption({host:t}),window.localStorage.setItem("lastSetIP",t)):this.status(e.error)}):this.status("Error, IP address cannot be empty")}goToTests(){navigate("tests")}status(t){window.clearTimeout(this.statusMessageTimer),this.statusDiv.innerHTML=t,this.statusMessageTimer=setTimeout(this.status,5e3,"")}}window.views=window.views||{},window.views.DeviceView=DeviceView;class MenuView extends BaseView{constructor(){super(),this.top=document.getElementById("top"),this.mainDiv=document.getElementById("main"),this.menuItems=["Device","Tests","Results"];var t=document.getElementsByTagName("body")[0];try{document.createEvent("TouchEvent"),this.nav.style.left="-600px",t.classList.remove("desktop"),t.className="touch",this.isTouchDevice=!0}catch(t){}this.top.innerHTML='<div id="header" class="header">\n          <div id="button-left" class="fa fa-bars left"></div>\n        </div>\n\n        \x3c!--navigation--\x3e\n        <div id="menu" class="navigation"></div>\n        ',this.header=document.getElementById("header"),this.nav=document.getElementById("menu");var e=new Image;e.alt="Metrological",e.onload=(()=>{this.header.appendChild(e)}),e.src="img/ml.svg",document.getElementById("button-left").onclick=this.showMenu.bind(this),window.onresize=function(){if(!0!==this.isTouchDevice){var t=document.getElementById("menu");window.innerWidth>960?t.style.left="0px":t.style.left="-600px"}};for(var s=document.createElement("ul"),i=0;i<this.menuItems.length;i++){var n=this.menuItems[i],o=document.createElement("li");o.id="item_"+n,o.className=0===i?"menu-item active":"menu-item",o.appendChild(document.createTextNode(n)),o.onclick=this.toggleMenuItem.bind(this,n),s.appendChild(o),this.nav.appendChild(s)}}toggleMenuItem(t){for(var e=document.getElementsByClassName("menu-item"),s=0;s<e.length;s++)"item_"+t===e[s].id?e[s].className="menu-item active":e[s].className="menu-item";navigate(t.toLowerCase())}showMenu(){var t=document.getElementById("menu");"0px"===t.style.left?t.style.left="-600px":t.style.left="0px"}}window.views=window.views||{},window.views.MenuView=MenuView;class TestView extends BaseView{constructor(){super(),this.testName=null,this.test=null}render(t){if(void 0===t)return void navigate("tests");if(this.testName=t,wtf.registerForTestProgress(this.updateProgress.bind(this)),void 0===host)return void(this.mainDiv.innerHTML='<div class="title grid__col grid__col--8-of-8">No device onboarded, please go to devices and select a device</div>');let e=wtf.tests[this.testName];if(void 0===e)return this.clear(),void navigate("tests");!1===e.loaded?e.load(t=>{t.error?this.renderError(t.error):void 0!==t.test?(this.test=t.test,this.renderTest()):this.renderError("Test not found")}):(this.test=e,this.renderTest(e))}clear(){wtf.deregisterForTestProgress(this.updateProgress),this.testName=null,this.test=null}renderError(t){this.mainDiv.innerHTML=`\n        <div class="text grid__col grid__col--8-of-8">Error loading test:</div>'\n        <div class="text grid__col grid__col--8-of-8">${t}</div>'`}renderTest(){let t=`\n            <div id="screenshot" class="canvas_in_test"></div>\n\n            <div class="title grid__col grid__col--2-of-8">Name</div>\n            <div class="text grid__col grid__col--3-of-8">${this.testName}</div>\n            <div class="grid__col grid__col--3-of-8"></div>\n\n            <div class="title grid__col grid__col--2-of-8">Title</div>\n            <div class="text grid__col grid__col--3-of-8">${this.test.title}</div>\n            <div class="grid__col grid__col--3-of-8"></div>\n\n            <div class="title grid__col grid__col--2-of-8">Description</div>\n            <div class="text grid__col grid__col--3-of-8">${this.test.description}</div>\n            <div class="grid__col grid__col--3-of-8"></div>\n\n            <div class="title grid__col grid__col--2-of-8">Progress</div>`;if(this.test.isRepeating()&&"Time"===this.test.getRepeatType()?t+=`<div class="text grid__col grid__col--4-of-8">${this.test.getRepeatTimeRemaining()} remaining</div>`:t+=`\n                <div id="progressBarDiv" class="text grid__col grid__col--2-of-8">\n                    <progress max="100" value="${this.test.getPercCompleted()}" id="progressBar"></progress>\n                </div>\n                <div id="progress" class="text grid__col grid__col--2-of-8">${this.test.getPercCompleted()}%</div>`,t+=`\n            <div id="result" class="text grid__col grid__col--2-of-8">${this.test.isRepeating()?this.test.getState()+" "+this.test.getRepeatRemaining():this.test.getState()}</div>\n\n            <div class="text grid__col grid__col--1-of-8"></div>\n            <div id="error" class="text grid__col grid__col--7-of-8">${this.test.getError()}</div>`,this.test.state!==this.test.states.start&&this.test.state!==this.test.states.repeat&&(t+='<div class="title grid__col grid__col--6-of-8"></div>\n                <div class="text grid__col grid__col--2-of-8">\n                    <button id="start_button1" type="button">Run</button>\n                </div>'),t+='<div class="grid__col grid__col--7-of-8">\n                <div class="table">\n                    <div class="row header">\n                        <div class="cell">Step</div>\n                        <div class="cell"></div>\n                        <div class="cell">Result</div>\n                    </div>',void 0===this.test.steps)t+='<div class="row">\n                    <div class="text grid__col grid__col--2-of-8">Test has no steps</div>\n                </div>';else{var e=Object.keys(this.test.steps);this.stepLength=e.length;for(var s=0;s<e.length;s++){var i=this.test.steps[e[s]];t+=`<div class="row ${"Running"===i.getState()?"running":""}">\n                        <div class="cell">${s+1}. ${i.description}</div>\n                        <div class="cell">${void 0!==i.sleep?"Sleep: "+i.sleep+"s":""}</div>\n                        <div id="step_progress_${s}" class="cell">${i.getState()}</div></div>`}}if(t+="</div></div>",this.test.state!==this.test.states.start&&this.test.state!==this.test.states.repeat&&(t+='\n                <div class="title grid__col grid__col--6-of-8"></div>\n                <div class="text grid__col grid__col--2-of-8">\n                    <button id="start_button2" type="button">Run</button>\n                </div>'),this.mainDiv.innerHTML=t,this.test.state!==this.test.states.start&&this.test.state!==this.test.states.repeat){let t=document.getElementById("start_button1"),e=document.getElementById("start_button2");t.onclick=this.startTest.bind(this),e.onclick=this.startTest.bind(this)}let n=document.getElementById("screenshot"),o=wtf.getScreenshotCanvas();void 0!==o&&n.appendChild(o)}startTest(){wtf.run(this.testName)}updateProgress(t){this.renderTest()}}window.views=window.views||{},window.views.TestView=TestView;class TestsView extends BaseView{constructor(){super()}render(){if(void 0===host)return void(this.mainDiv.innerHTML='<div class="title grid__col grid__col--8-of-8">No device onboarded, please go to devices and select a device</div>');var t='<div class="table">\n\t\t\t\t<div class="row header">\n\t\t\t\t\t<div class="cell">\n\t\t\t\t\t\tTest ID\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="cell">\n\t\t\t\t\t\tDescription\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="cell">\n\t\t\t\t\t\tResult\n\t\t\t\t\t</div>\n\t\t\t\t</div>';let e=Object.keys(wtf.tests);for(var s=0;s<e.length;s++){let i=e[s],n=wtf.tests[i];!1!==this.checkIfTestCanBeRendered(n)&&(t+=`<div id="${n.name}_row" class="row ${!0===n.disabled?"disabled":""}">\n\t\t\t\t\t<div class="cell">\n\t\t\t\t\t\t${n.name}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="cell">\n\t\t\t\t\t\t${n.description}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="cell">\n\t\t\t\t\t\t${n.getState()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>`)}this.mainDiv.innerHTML=t;for(var i=0;i<e.length;i++){let t=e[i],s=wtf.tests[t],n=document.getElementById(s.name+"_row");!1!==this.checkIfTestCanBeRendered(s)&&(n.onclick=this.showTest.bind(this,s.name))}}checkIfTestCanBeRendered(t){return(!0===wtf.dummyMode||"DUMMY"!==t.name.slice(0,5))&&((!1!==wtf.showDisabled||!0!==t.disabled)&&((void 0!==wtf.operator||void 0===t.operator)&&(void 0===wtf.operator||void 0===t.operator||wtf.operator===t.operator)))}showTest(t){navigate("test",t)}}window.views=window.views||{},window.views.TestsView=TestsView;class Message{constructor(){this.worker,this.messageContext,this.statesToBeSynced=[]}send(t){t.messageContext=this.messageContext,void 0!==this.worker&&void 0!==this.worker.postMessage?this.worker.postMessage(t):postMessage(t)}sync(){var t={};for(let e=0;e<this.statesToBeSynced.length;e++){let s=this.statesToBeSynced[e];t[s]=this[s]}this.send(t)}}class Init extends Message{constructor(t){super(),this.worker=t,this.messageContext="Init",this.test="",this.host="",this.debug=!1,this.states={initFailure:-1,loaded:0,init:1,initReady:2,loadTest:3},this.state=-1,this.statesToBeSynced=["test","state","host","debug"]}initialize(){this.state=this.states.init,this.sync()}setInitReady(){this.state=this.states.initReady,this.sync()}setInitFailure(){this.state=this.states.initFailure,this.sync()}setDebug(){this.debug=!0}setLoadTest(t,e){this.test=t,this.host=e,this.state=this.states.loadTest,this.sync(worker)}}class NeedImage extends Message{constructor(t){super(),this.worker=t,this.messageContext="NeedImage",this.url="",this.imageData="",this.statesToBeSynced=["url","imageData"]}setURL(t){this.url=t,this.sync()}setImageData(t){this.imageData=t,this.sync()}}class Test extends Message{constructor(t){super(),this.description=t.description,this.disabled="true"==t.disabled,this.file=t.file,this.name=t.name,this.operator=t.operator,this.title=t.title,this.cleanup=t.cleanup,this.extends=t.extends,this.requiredPlugins=t.requiredPlugins?t.requiredPlugins:[],this.timeout=t.timeout?t.timeout:3600,this.steps=t.steps?t.steps:{},this.knownKeys=["operator","title","description","requiredPlugins","timeout","cleanup","steps"],this.messageContext="TestMessage",this.loaded=!1,this.result="",this.cleanedup=!1,this.cleanupResult="",this.completed=!1,this.repeating=!1,this.repeatRemainingTime=-1,this.repeatRemainingCount=-1,this.repeatStepIdx=null,this.repeatTotal=null,this.states={init:-1,start:0,timedout:1,error:2,success:3,notapplicable:4,repeat:5},this.state=this.states.init,this.statesToBeSynced=["name","state","result","cleanedup","cleanupResult","completed","repeating","repeatRemainingTime","repeatRemainingCount","repeatTotal"]}load(cb){get(this.file,resp=>{if(resp.error)return void cb(resp);let test;try{test=eval(resp.body)}catch(t){return void cb({error:t.message})}this.cleanup=test.cleanup,this.disabled=test.disabled?test.disabled:"false",this.extends=test.extends,this.requiredPlugins=test.requiredPlugins?test.requiredPlugins:[],this.timeout=test.timeout?test.timeout:36e5,this.title=test.title,this.currentStep;let objectsInTest=Object.keys(test);for(let t=0;t<objectsInTest.length;t++){let e=objectsInTest[t];-1===this.knownKeys.indexOf(e)&&(this[e]=test[objectsInTest[t]])}void 0!==this.extends?_getExtendedTestSteps(this.extends,t=>{if(t.error&&cb(t),t.steps)for(var e in t.test.steps)test.steps[e]=t.steps[e];this._addSteps(test.steps,cb)}):this._addSteps(test.steps,cb)})}_getExtendedTestSteps(ex,cb){get("js/tests/"+ex+".js",_resp=>{let test;_resp.error&&cb({error:"Error loading extended test"+test.extends});try{test=eval(_resp.body)}catch(t){return void cb({error:t.message})}cb({steps:test.steps})})}_addSteps(t,e){let s=Object.keys(t);for(let i=0;i<s.length;i++)this.steps[s[i]]=new Step(t[s[i]],i),i>=s.length-1&&e({test:this});this.loaded=!0}getState(){let t;switch(this.state){case this.states.init:t="Not Started";break;case this.states.start:t="Running";break;case this.states.timedout:t="Timed out";break;case this.states.error:t="Error";break;case this.states.success:t="Success";break;case this.states.notapplicable:t="Not Applicable";break;case this.states.repeat:t="Repeating"}return t}getPercCompleted(){let t="0";if(this.state>1||void 0!==this.currentStep){let e=Object.keys(this.steps),s=e.indexOf(this.currentStep);t=!0===this.repeating&&-1!==this.repeatRemainingCount?(100*(1-this.repeatRemainingCount/this.repeatTotal)).toFixed(0):((s+1)/e.length*100).toFixed(0)}return t}getResult(){return this.result}getError(){let t="";return this.state!==this.states.error&&this.state!==this.states.timedout&&this.state!==this.states.notapplicable||(t=this.result),t}isRepeating(){return this.repeating}getRepeatTimeRemaining(){return moment(this.repeatRemainingTime).toNow(!0)}getRepeatRemaining(){let t;return-1!==this.repeatRemainingCount?t=this.repeatRemainingCount+" times":-1!==this.repeatRemainingTime&&(t=""),t}getRepeatType(){let t;return-1!==this.repeatRemainingCount?t="Count":-1!==this.repeatRemainingTime&&(t="Time"),t}start(){this.state=this.states.start,this.sync()}error(t){this.state=this.states.error,this.result=t,this.sync()}timedout(t){this.state=this.states.timedout,this.result=t,this.sync()}success(t){this.state=this.states.success,this.result=t,this.sync()}notApplicable(t){this.state=this.states.notapplicable,this.result=t,this.sync()}complete(t){this.completed=!0,this.sync()}cleanedup(t){this.cleanedup=!0,this.cleanupResult=t,this.sync()}setRepeat(t){if(this.repeating=t,1==t){this.state=this.states.repeat;Object.keys(this.steps).indexOf(this.currentStep);this.repeatStepIdx=this.currentStepIdx}else this.state=this.states.start,this.repeatStepIdx=null;this.sync()}setRepeatRemainging(t){t.repeatRemainingCount?(this.repeatRemainingCount=t.repeatRemainingCount,this.repeatTotal=t.repeatTotal):t.repeatRemainingTime&&(this.repeatRemainingTime=t.repeatRemainingTime),this.sync()}}class Step extends Message{constructor(t,e,s,i){super(),this.assert=t.assert,this.description=t.description,this.params=t.params,this.sleep=t.sleep,this.test=t.test,this.timeout=t.timeout?t.timeout:3e5,this.validate=t.validate,this.messageContext="StepMessage",this.name=s,this.testName=i,this.stepIdx=e,this.response=null,this.result=null,this.states={init:-1,start:0,response:1,success:2,failed:3,needuser:4},this.state=this.states.init,this.statesToBeSynced=["name","stepIdx","response","result","state","testName"]}getState(){let t="Not Started";return this.state===this.states.init?t="Not Started":this.state===this.states.start?t="Running":this.state===this.states.success?t="Success":this.state===this.states.failed&&(t="Failed"),t}start(){this.state=this.states.start,this.sync()}setResponse(t){this.state=this.states.response,this.response=t,this.sync()}getResponse(){return this.response}success(t){this.state=this.states.success,this.result=t,this.sync()}fail(t){this.state=this.states.failed,this.result=t,this.sync()}needUser(){this.state=this.states.needuser,this.sync()}}